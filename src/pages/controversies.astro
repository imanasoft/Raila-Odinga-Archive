---
import BaseLayout from '@layouts/BaseLayout.astro';
import { getEntry } from 'astro:content';
import { parse } from 'yaml';

import { primaryNav } from '@config/navigation';
import type { ElectionEntry } from '@types/content';
import { mapSourceIds } from '@utils/sources';

const navItems = [...primaryNav];

const pageEntry = await getEntry('pages', 'controversies');
const { Content } = await pageEntry.render();
const hero = pageEntry.data.hero;

const electionModules = import.meta.glob<string>('../../content/elections/*.yaml', {
  eager: true,
  query: '?raw',
  import: 'default'
});

const elections = Object.values(electionModules).map((content) => parse(content) as ElectionEntry);

const disputedElections = elections
  .filter((entry) => entry.results?.status && entry.results.status.toLowerCase() !== 'concluded')
  .sort((a, b) => (b.cycle?.year ?? 0) - (a.cycle?.year ?? 0));

const protestSources = mapSourceIds(['hrw-2008-violence', 'amnesty-2023-protests']);
const governanceSources = mapSourceIds(['transparency-kenya-report-2022', 'economist-2024-profile']);

const sections = new Map(pageEntry.data.sections.map((section) => [section.id, section]));
const updatedAt = pageEntry.data.updated.toISOString();
---
<BaseLayout title={pageEntry.data.title} description={pageEntry.data.description} updatedAt={updatedAt} navItems={navItems}>
  <section class="hero" aria-labelledby="controversies-hero">
    {hero?.eyebrow && <p class="site-section__eyebrow">{hero.eyebrow}</p>}
    <h1 id="controversies-hero" class="site-section__title">{hero?.heading ?? pageEntry.data.title}</h1>
    {hero?.summary && <p class="site-section__intro">{hero.summary}</p>}
  </section>

  <article class="prose" aria-labelledby="controversies-narrative">
    <h2 id="controversies-narrative" class="visually-hidden">Narrative overview</h2>
    <Content />
  </article>

  {sections.get('election-disputes') && (
    <section class="site-section" id="election-disputes" aria-labelledby="election-disputes-title">
      <p class="site-section__eyebrow">{sections.get('election-disputes')?.eyebrow}</p>
      <h2 id="election-disputes-title" class="site-section__title">{sections.get('election-disputes')?.title}</h2>
      {sections.get('election-disputes')?.summary && <p class="site-section__intro">{sections.get('election-disputes')?.summary}</p>}
      <div class="table-wrapper" role="region" aria-live="polite">
        <table>
          <caption class="visually-hidden">Election disputes and legal outcomes</caption>
          <thead>
            <tr>
              <th scope="col">Year</th>
              <th scope="col">Outcome</th>
              <th scope="col">Legal Actions</th>
            </tr>
          </thead>
          <tbody>
            {disputedElections.map((entry) => (
              <tr>
                <td>{entry.cycle?.year ?? '—'}</td>
                <td>{entry.outcome ?? '—'}</td>
                <td>
                  <ul>
                    {(entry.legal_challenges ?? []).map((challenge) => (
                      <li>
                        {challenge.summary}
                        {challenge.sources && challenge.sources.length > 0 && (
                          <span class="table-sources">
                            {mapSourceIds(challenge.sources.map((source) => source.source_id)).map((source, index) => (
                              <>
                                {index > 0 && ', '}
                                {source.url ? (
                                  <a href={source.url} rel="noopener" target="_blank">{source.publisher ?? source.title}</a>
                                ) : (
                                  source.publisher ?? source.title
                                )}
                              </>
                            ))}
                          </span>
                        )}
                      </li>
                    ))}
                  </ul>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </section>
  )}

  {sections.get('protest-dynamics') && (
    <section class="site-section" id="protest-dynamics" aria-labelledby="protest-dynamics-title">
      <p class="site-section__eyebrow">{sections.get('protest-dynamics')?.eyebrow}</p>
      <h2 id="protest-dynamics-title" class="site-section__title">{sections.get('protest-dynamics')?.title}</h2>
      {sections.get('protest-dynamics')?.summary && <p class="site-section__intro">{sections.get('protest-dynamics')?.summary}</p>}
      <ul class="source-list">
        {protestSources.map((source) => (
          <li>
            {source.url ? (
              <a href={source.url} rel="noopener" target="_blank">{source.publisher ?? source.title}</a>
            ) : (
              <span>{source.publisher ?? source.title}</span>
            )}
          </li>
        ))}
      </ul>
    </section>
  )}

  {sections.get('governance-questions') && (
    <section class="site-section" id="governance-questions" aria-labelledby="governance-questions-title">
      <p class="site-section__eyebrow">{sections.get('governance-questions')?.eyebrow}</p>
      <h2 id="governance-questions-title" class="site-section__title">{sections.get('governance-questions')?.title}</h2>
      {sections.get('governance-questions')?.summary && (
        <p class="site-section__intro">{sections.get('governance-questions')?.summary}</p>
      )}
      <ul class="source-list">
        {governanceSources.map((source) => (
          <li>
            {source.url ? (
              <a href={source.url} rel="noopener" target="_blank">{source.publisher ?? source.title}</a>
            ) : (
              <span>{source.publisher ?? source.title}</span>
            )}
          </li>
        ))}
      </ul>
    </section>
  )}
</BaseLayout>

<style>
.hero {
  padding-block: var(--space-7);
}

.table-wrapper {
  overflow-x: auto;
}

.table-wrapper table {
  width: 100%;
  border-collapse: collapse;
}

.table-wrapper th,
.table-wrapper td {
  border-bottom: 1px solid var(--color-border-default);
  padding: var(--space-2);
  text-align: left;
}

.table-wrapper th {
  font-family: var(--font-family-sans);
  font-size: var(--font-size-75);
  text-transform: uppercase;
  letter-spacing: 0.08em;
  color: var(--color-text-secondary);
}

.table-sources {
  display: block;
  font-size: var(--font-size-75);
  margin-top: var(--space-1);
  color: var(--color-text-secondary);
}

.source-list {
  list-style: none;
  margin: var(--space-4) 0 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.source-list a {
  text-decoration: none;
}

.source-list a:hover,
.source-list a:focus-visible {
  text-decoration: underline;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
</style>
